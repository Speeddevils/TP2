/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.io.FileNotFoundException;

import dao.BaseDao;
import game.Liga;


public class JFbase extends javax.swing.JFrame implements Runnable {

	/**
	 * Creates new form JFbase
	 */
	public JFbase() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jTabbedPane = new javax.swing.JTabbedPane();
		jPanelTab1 = new javax.swing.JPanel();
		jPanel1 = new javax.swing.JPanel();
		jComboBox1 = new javax.swing.JComboBox<>();
		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new ui.JTableExecutorQuery();
		jLabelFlag = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vencedores de cada luta",
				"Lutas ocorridas em cada liga", "Pontos ganhos para cada jogador em cada luta",
				"Número de vitórias por país", "Número de vitórias por jogador", "Vencedores por categoria",
				"Total de lutas computadas", "Informação dos lutadores" }));
		jComboBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		jButton1.setText("Filtrar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 549,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18).addComponent(jButton1).addContainerGap(45, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(10, 10, 10)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton1))
						.addGap(10, 10, 10)));

		jScrollPane1.setViewportView(jTable1);

		jLabelFlag.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
		jLabelFlag.setForeground(java.awt.Color.red);
		jLabelFlag.setText("Processando arquivos por favor aguarde...");

		javax.swing.GroupLayout jPanelTab1Layout = new javax.swing.GroupLayout(jPanelTab1);
		jPanelTab1.setLayout(jPanelTab1Layout);
		jPanelTab1Layout.setHorizontalGroup(jPanelTab1Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelTab1Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanelTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
								.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanelTab1Layout.createSequentialGroup()
										.addComponent(jLabelFlag, javax.swing.GroupLayout.PREFERRED_SIZE, 396,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(0, 0, Short.MAX_VALUE)))
						.addContainerGap()));
		jPanelTab1Layout.setVerticalGroup(
				jPanelTab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						jPanelTab1Layout.createSequentialGroup().addGap(10, 10, 10)
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
								.addGap(10, 10, 10).addComponent(jLabelFlag).addGap(10, 10, 10)));

		jTabbedPane.addTab("Consultas", jPanelTab1);

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane2.setViewportView(jTextArea1);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(10, 10, 10)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
						.addGap(10, 10, 10)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(10, 10, 10)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
						.addGap(10, 10, 10)));

		jTabbedPane.addTab("Log", jPanel2);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addComponent(jTabbedPane).addGap(0, 0, 0)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addComponent(jTabbedPane).addGap(0, 0, 0)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
//
//        0 - Lutadores vencedores de cada luta
//        1 - Lutas ocorridas em cada liga (2015, 2016, 2017, 2018 e 2019)
//        2 - Pontos ganhos para cada jogador em cada luta
//        3 - Número de vitórias por país
//        4 - Número de vitórias por jogador
//        5 - Maior vencedor por categoria
//        6 - NÃºmero de lutas computadas no total
//        7 - Nomes dos lutadores, categoria, país, sexo e quantidade de vitorias (Ordem crescente de vitórias de categoria)

		int index = jComboBox1.getSelectedIndex();

		switch (index) {
		case 0:
			jTable1.setModelo(BaseDao.getInstance().vencedoresLuta());
			break;
		case 1:
			jTable1.setModelo(BaseDao.getInstance().lutasByLiga());
			break;
		case 2:
			jTable1.setModelo(BaseDao.getInstance().pontosByJogador());
			break;
		case 3:
			jTable1.setModelo(BaseDao.getInstance().vitoriasByPais());
			break;
		case 4:
			jTable1.setModelo(BaseDao.getInstance().vitoriasByJogador());
			break;
		case 5:
			jTable1.setModelo(BaseDao.getInstance().vencedorByCategoria());
			break;
		case 6:
			jTable1.setModelo(BaseDao.getInstance().countLutas());
			break;
		default:
			// padrao
			jTable1.setModelo(BaseDao.getInstance().infoJogadores());
			break;
		}

		if (jTable1.getModelo().isDataResultSet()) {
			jTable1.setModeloRender(jTable1);
		}

		jTable1.setAutoCreateRowSorter(true);

	}// GEN-LAST:event_jButton1ActionPerformed

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
		// TODO add your handling code here:
		if (jComboBox1.getSelectedIndex() > -1) {
			jButton1ActionPerformed(evt);
		}
	}// GEN-LAST:event_jComboBox1ActionPerformed

	@Override
	public void run() {

		this.setEnabled(false);
		// popula a base com os dados dos arquivos
		new Thread(new Runnable() {
			@Override
			public void run() {
				if (populate()) { 
					JFbase.this.setEnabled(true);
					jLabelFlag.setForeground(Color.blue);
					jLabelFlag.setText("Arquivos processados com sucesso");
				}
			}
		}).start();

		this.setVisible(true);
		this.setLocationRelativeTo(null);
	}

	private boolean populate() {
		try {
			new Liga().popular(jTextArea1);
			return true;
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			jLabelFlag.setForeground(Color.red);
			jLabelFlag.setText(e.getMessage());
			return false;
		}

	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JComboBox<String> jComboBox1;
	private javax.swing.JLabel jLabelFlag;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanelTab1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTabbedPane jTabbedPane;
	private ui.JTableExecutorQuery jTable1;
	private javax.swing.JTextArea jTextArea1;
	// End of variables declaration//GEN-END:variables

}
